## @section Global parameters
global:
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param global.containerSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param global.containerSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param global.containerSecurityContext.fsGroup Set Hoppscotch container's Security Context fsGroup
  ## @param global.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    runAsUser: 15000
    runAsGroup: 15000
    fsGroup: 15000
    seccompProfile:
      type: RuntimeDefault
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param global.podSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param global.podSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param global.podSecurityContext.allowPrivilegeEscalation Set Hoppscotch containers' Security Context allowPrivilegeEscalation
  ## @param global.podSecurityContext.capabilities.drop Set Hoppscotch containers' Security Context capabilities to be dropped
  ## @param global.podSecurityContext.readOnlyRootFilesystem Set Hoppscotch containers' Security Context readOnlyRootFilesystem
  ## @param global.podSecurityContext.runAsNonRoot Set Hoppscotch container's Security Context runAsNonRoot
  ##
  podSecurityContext:
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsUser: 15000
    runAsGroup: 15000
    capabilities:
      drop:
      - ALL
  ## @param global.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  

## @section Common parameters

## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @section Admin controller parameters

## Admin controller
##
admin:
  ## @param admin.enabled Enable Admin controller
  ##
  enabled: true
  ## @param admin.replicaCount The number of Admin controller pods to run
  ##
  replicaCount: 1
  ## Hoppscotch admin controller ports
  ## @param admin.containerPorts.server Hoppscotch admin controller server port number
  ##
  containerPorts:
    server: 8080
  ## Hoppscotch admin image
  ## @param image.repository Hoppscotch admin image repository
  ## @skip  image.tag Hoppscotch admin image tag
  ## @param image.digest Hoppscotch admin in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Hoppscotch admin image pull policy
  ##
  image:
    repository: hoppscotch/hoppscotch-admin
    tag: ""
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
  ## Hoppscotch admin controller service parameters
  ##
  service:
    ## @param admin.service.type Hoppscotch admin controller service type
    ##
    type: ClusterIP
    ## @param admin.service.clusterIP Hoppscotch admin controller service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param admin.service.servicePortHttp Admin service port
    ##
    servicePortHttp: 80
  ## Hoppscotch admin controller HPA parameters
  ##
  autoscaling:
    ## @param admin.autoscaling.enabled Enable Horizontal Pod Autoscaler for the Hoppscotch admin
    ##
    enabled: true
    ## @param admin.autoscaling.minRelpicas Minimum number of replicas for the Hoppscotch admin
    ##
    minReplicas: 1
    ## @param admin.autoscaling.maxReplicas Maximum number of replicas for the Hoppscotch admin
    ##
    maxReplicas: 3
    ## @param admin.autoscaling.targetCPUPercentage Average CPU utilization percentage for the Hoppscotch admin
    ##
    targetCPUPercentage: 75
    ## @param admin.autoscaling.targetMemoryPercentage Average memory utilization percentage for the Hoppscotch admin
    ##
    targetMemoryPercentage: 75
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.containerSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.containerSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.containerSecurityContext.fsGroup Set Hoppscotch container's Security Context fsGroup
  ## @param admin.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext: {}
  ## @param admin.livenessProbe.enabled Enable livenessProbe on Hoppscotch admin controller nodes
  ##
  livenessProbe:
    enabled: true
  ## @param admin.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## @param admin.podAnnotations Annotations for Admin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.podSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.podSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.podSecurityContext.allowPrivilegeEscalation Hoppscotch containers' Security Context allowPrivilegeEscalation
  ## @param admin.podSecurityContext.capabilities.drop Hoppscotch containers' Security Context capabilities to be dropped
  ## @param admin.podSecurityContext.readOnlyRootFilesystem Set Hoppscotch containers' Security Context readOnlyRootFilesystem
  ## @param admin.podSecurityContext.runAsNonRoot Set Hoppscotch container's Security Context runAsNonRoot
  ##
  podSecurityContext: {}
  ## @param admin.updateStrategy.type hoppscotch admin controller deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param admin.extraEnvVars Array with extra environment variables to add to Hoppscotch admin controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

## Backend controller
##
backend:
  ## @param admin.enabled Enable Admin controller
  ##
  enabled: true
  ## @param admin.replicaCount The number of Admin controller pods to run
  ##
  replicaCount: 1
  ## Hoppscotch admin controller ports
  ## @param admin.containerPorts.server Hoppscotch admin controller server port number
  ##
  containerPorts:
    server: 8080
  ## Hoppscotch admin image
  ## @param image.repository Hoppscotch admin image repository
  ## @skip  image.tag Hoppscotch admin image tag
  ## @param image.digest Hoppscotch admin in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Hoppscotch admin image pull policy
  ##
  image:
    repository: hoppscotch/hoppscotch-backend
    tag: ""
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
  ## Hoppscotch admin controller service parameters
  ##
  service:
    ## @param admin.service.type Hoppscotch admin controller service type
    ##
    type: ClusterIP
    ## @param admin.service.clusterIP Hoppscotch admin controller service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param admin.service.servicePortHttp Admin service port
    ##
    servicePortHttp: 80
  ## Hoppscotch admin controller HPA parameters
  ##
  autoscaling:
    ## @param admin.autoscaling.enabled Enable Horizontal Pod Autoscaler for the Hoppscotch admin
    ##
    enabled: true
    ## @param admin.autoscaling.minRelpicas Minimum number of replicas for the Hoppscotch admin
    ##
    minReplicas: 1
    ## @param admin.autoscaling.maxReplicas Maximum number of replicas for the Hoppscotch admin
    ##
    maxReplicas: 3
    ## @param admin.autoscaling.targetCPUPercentage Average CPU utilization percentage for the Hoppscotch admin
    ##
    targetCPUPercentage: 75
    ## @param admin.autoscaling.targetMemoryPercentage Average memory utilization percentage for the Hoppscotch admin
    ##
    targetMemoryPercentage: 75
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.containerSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.containerSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.containerSecurityContext.fsGroup Set Hoppscotch container's Security Context fsGroup
  ## @param admin.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext: {}
  ## @param admin.livenessProbe.enabled Enable livenessProbe on Hoppscotch admin controller nodes
  ##
  livenessProbe:
    enabled: true
  ## @param admin.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## @param admin.podAnnotations Annotations for Admin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.podSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.podSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.podSecurityContext.allowPrivilegeEscalation Hoppscotch containers' Security Context allowPrivilegeEscalation
  ## @param admin.podSecurityContext.capabilities.drop Hoppscotch containers' Security Context capabilities to be dropped
  ## @param admin.podSecurityContext.readOnlyRootFilesystem Set Hoppscotch containers' Security Context readOnlyRootFilesystem
  ## @param admin.podSecurityContext.runAsNonRoot Set Hoppscotch container's Security Context runAsNonRoot
  ##
  podSecurityContext: {}
  ## @param admin.updateStrategy.type hoppscotch admin controller deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param admin.extraEnvVars Array with extra environment variables to add to Hoppscotch admin controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

## Frontend controller
##
frontend:
  ## @param admin.enabled Enable Admin controller
  ##
  enabled: true
  ## @param admin.replicaCount The number of Admin controller pods to run
  ##
  replicaCount: 1
  ## Hoppscotch admin controller ports
  ## @param admin.containerPorts.server Hoppscotch admin controller server port number
  ##
  containerPorts:
    server: 8080
  ## Hoppscotch admin image
  ## @param image.repository Hoppscotch admin image repository
  ## @skip  image.tag Hoppscotch admin image tag
  ## @param image.digest Hoppscotch admin in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Hoppscotch admin image pull policy
  ##
  image:
    repository: hoppscotch/hoppscotch-frontend
    tag: ""
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
  ## Hoppscotch admin controller service parameters
  ##
  service:
    ## @param admin.service.type Hoppscotch admin controller service type
    ##
    type: ClusterIP
    ## @param admin.service.clusterIP Hoppscotch admin controller service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param admin.service.servicePortHttp Admin service port
    ##
    servicePortHttp: 80
  ## Hoppscotch admin controller HPA parameters
  ##
  autoscaling:
    ## @param admin.autoscaling.enabled Enable Horizontal Pod Autoscaler for the Hoppscotch admin
    ##
    enabled: true
    ## @param admin.autoscaling.minRelpicas Minimum number of replicas for the Hoppscotch admin
    ##
    minReplicas: 1
    ## @param admin.autoscaling.maxReplicas Maximum number of replicas for the Hoppscotch admin
    ##
    maxReplicas: 3
    ## @param admin.autoscaling.targetCPUPercentage Average CPU utilization percentage for the Hoppscotch admin
    ##
    targetCPUPercentage: 75
    ## @param admin.autoscaling.targetMemoryPercentage Average memory utilization percentage for the Hoppscotch admin
    ##
    targetMemoryPercentage: 75
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.containerSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.containerSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.containerSecurityContext.fsGroup Set Hoppscotch container's Security Context fsGroup
  ## @param admin.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext: {}
  ## @param admin.livenessProbe.enabled Enable livenessProbe on Hoppscotch admin controller nodes
  ##
  livenessProbe:
    enabled: true
  ## @param admin.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## @param admin.podAnnotations Annotations for Admin pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param admin.podSecurityContext.runAsUser Set Hoppscotch containers' Security Context runAsUser
  ## @param admin.podSecurityContext.runAsGroup Set Hoppscotch containers' Security Context runAsGroup
  ## @param admin.podSecurityContext.allowPrivilegeEscalation Hoppscotch containers' Security Context allowPrivilegeEscalation
  ## @param admin.podSecurityContext.capabilities.drop Hoppscotch containers' Security Context capabilities to be dropped
  ## @param admin.podSecurityContext.readOnlyRootFilesystem Set Hoppscotch containers' Security Context readOnlyRootFilesystem
  ## @param admin.podSecurityContext.runAsNonRoot Set Hoppscotch container's Security Context runAsNonRoot
  ##
  podSecurityContext: {}
  ## @param admin.updateStrategy.type hoppscotch admin controller deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param admin.extraEnvVars Array with extra environment variables to add to Hoppscotch admin controller nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []

  ingress:
    enabled: true
    hostname: hoppscotch.local